on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  job1:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release Body
        run: |
          mapfile -t my_change < <(grep -n -m 2 '##' CHANGELOG.md | cut -f1 -d:)
          sed -n -e "${my_change[0]},$(expr ${my_change[1]} - 1) p" CHANGELOG.md > RELEASE.md
      - name: Create Windows Asset
        working-directory: ./Windows
        run: zip HuskyPrint-Windows.zip -r * -9
      - name: Create Linux Asset
        working-directory: ./Linux
        run: tar -cvjSf HuskyPrint-Linux.tar.bz2 *
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body_path: RELEASE.md
          draft: false
          prerelease: false
      - name: Upload Windows Release Asset
        id: upload-windows-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Windows/HuskyPrint-Windows.zip
          asset_name: HuskyPrint-Windows.zip
          asset_content_type: application/zip
      - name: Upload Linux Release Asset
        id: upload-linux-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Linux/HuskyPrint-Linux.tar.bz2
          asset_name: HuskyPrint-Linux.tar.bz2
          asset_content_type: application/x-tar
  job2:
    runs-on: macos-latest
    needs: job1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Mac Asset
        run: hdiutil create -volname "HuskyPrint" -srcfolder ./Mac -format UDRO HuskyPrint-Mac.dmg
      - name: Upload Mac Release Asset
        id: upload-mac-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.job1.outputs.upload_url }}
          asset_path: ./HuskyPrint-Mac.dmg
          asset_name: HuskyPrint-Mac.dmg
          asset_content_type: application/octet-stream
